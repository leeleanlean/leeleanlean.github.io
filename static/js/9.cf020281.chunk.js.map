{"version":3,"sources":["views/Tool/Index/index.tsx","components/LayoutMain/index.tsx"],"names":["ToolIndex","useState","value","setValue","className","onChange","e","target","source","LayoutMain","props","title","children"],"mappings":"sLAqDeA,UA/CG,WAAO,IAAD,EACIC,mBAAS,gtBADb,mBACfC,EADe,KACRC,EADQ,KAiCtB,OACE,kBAAC,IAAD,CAAYC,UAAW,YACrB,yBAAKA,UAAU,QACb,8BACEF,MAAOA,EACPG,SARS,SAACC,GAChBH,EAASG,EAAEC,OAAOL,WAUhB,yBAAKE,UAAU,SACb,kBAAC,IAAD,CAAeI,OAAQN,Q,gCChD/B,oBAceO,IAZI,SAACC,GAClB,OACE,yBAAKN,UAAU,4BAEXM,EAAMC,OAAS,wBAAIP,UAAU,SAASM,EAAMC,OAE9C,yBAAKP,UAAWM,EAAMN,UAAN,UAAqBM,EAAMN,UAA3B,aAAkD,YAC/DM,EAAME","file":"static/js/9.cf020281.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport LayoutMain from '../../../components/LayoutMain'\nimport ReactMarkdown from 'react-markdown'\n\nimport './index.scss'\n\nconst ToolIndex = () => {\n  const [value, setValue] = useState(`# Markdown\\n\n> Markdown Editor\\n\n## 1. 列表\\n\n### 1.1 无序列表\\n\n- Apple\n- Banana\n- Orange\\n\n### 1.2 有序列表\\n\n1. Apple\n1. Banana\n1. Orange\\n\n## 2. 代码\\n\n\\`\\`\\`\nconst queryUser = (name: string, age: number) => { name, age }\n\\`\\`\\`\n## 3. 样式\\n\n~~删除线（开启识别HTML标签时）~~\\n\n_斜体字_\\n\n__粗体__\\n\n___粗斜体___\\n\n## 4. 表格\n| Name      | Age | City      |\n| --------- | --- | ----      |\n| Ming      | 1   | ShangHaii |\n| Hua       | 3   | BeiJing   |\n| Wei       | 6   | ShenZhen  |\\n\n## 5. 链接\n[LeeLean](https://github.com/leeleanlean)`)\n\n  const onChange = (e: { target: { value: any } }) => {\n    setValue(e.target.value)\n  }\n  return (\n    <LayoutMain className={'markdown'}>\n      <div className=\"left\">\n        <textarea\n          value={value}\n          onChange={ onChange }\n        />\n      </div>\n      <div className=\"right\">\n        <ReactMarkdown source={value} />\n      </div>\n    </LayoutMain>\n  )\n}\nexport default ToolIndex\n","import React from 'react'\n\nconst LayoutMain = (props: {title?: string, className?: string, children: React.ReactNode}) => {\n  return (\n    <div className=\"layout-content-container\">\n      {\n        props.title && <h3 className=\"title\">{props.title}</h3>\n      }\n      <div className={props.className ? `${props.className} bg-white` : 'bg-white'}>\n        {props.children}\n      </div>\n    </div>\n  )\n}\nexport default LayoutMain"],"sourceRoot":""}